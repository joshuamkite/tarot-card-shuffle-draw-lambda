name: Go CI/CD

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "**"
  release:
    types:
      - created

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test on all branches and PRs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Go mod tidy
        run: go mod tidy

      - name: Test
        run: go test -v -cover ./...

  docker_build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) || github.event_name == 'release'
    needs: test
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/tarot_shuffle_draw
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            docker build -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest .
            docker push $IMAGE_NAME:$VERSION
            docker push $IMAGE_NAME:latest
          else
            docker build -t $IMAGE_NAME:latest .
            docker push $IMAGE_NAME:latest
          fi

  release:
    if: github.event_name == 'release'
    name: Upload Docker Image to Release
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/tarot_shuffle_draw
          docker pull $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.event.release.tag_name }}
          docker push $IMAGE_NAME:${{ github.event.release.tag_name }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          name: Release ${{ github.event.release.tag_name }}
          body: |
            Docker image for the release: `ghcr.io/${{ github.repository }}/tarot_shuffle_draw:${{ github.event.release.tag_name }}`
          allowUpdates: true
