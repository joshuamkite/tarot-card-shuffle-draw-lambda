name: Go CI/CD

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [closed] # Restricts PR jobs to only run when PRs are closed

jobs:
  test:
    if: github.event_name == 'push' # Runs only on push events
    name: Test on all branches
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Test
        run: go test -v -cover ./...

  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed') # Runs on push or when PRs are closed
    needs: test
    name: Build and Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: "linux/amd64"
            goos: "linux"
            goarch: "amd64"
          - platform: "darwin/amd64"
            goos: "darwin"
            goarch: "amd64"
          - platform: "darwin/arm64"
            goos: "darwin"
            goarch: "arm64"
          - platform: "windows/amd64"
            goos: "windows"
            goarch: "amd64"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./bin/tarot_${{ matrix.goos }}_${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} main.go

      - name: Package Binaries
        run: |
          zip -j tarot_${{ matrix.goos }}_${{ matrix.goarch }}.zip ./bin/tarot_${{ matrix.goos }}_${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tarot-${{ matrix.goos }}-${{ matrix.goarch }}
          path: tarot_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') # Ensures release only happens on tag push
    name: Create Release and Upload Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all Artifacts
        uses: actions/download-artifact@v4
